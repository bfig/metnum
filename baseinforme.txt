%Ej1.2
\subsection{Hallar $Q$ y $b$}
Comentario: Aca se muestra el desarrollo de como se llega a $Q$ y $b$.
Sean $Q \in \mathbb{R}^{2\times2}$ y $b \in \mathbb{R}^{2\times1}$ tales que

\begin{equation*}
    Q = \begin{pmatrix} q_{11} & q_{12} \\ q_{21} & q_{22} \end{pmatrix}
\end{equation*}

\begin{equation*}
    b = \begin{pmatrix} b_1 \\ b_2 \end{pmatrix}
\end{equation*}


Sea $f(z) = (z^{T}Qz - 2b^{T}z) + 2e^{x+y}$ con $z = (x,y)^T \in \mathbb{R}^{2\times1}$.
Desarrollando esta expresion se llega a
$f(x,y) = q_{11}x^2 + q_{22}y^2 + (q_{12} + q_{21})xy - 2b_1x - 2b_2y + 2e^{x+y}$

Para que esta expresion sea igual a (1), se tiene que
$q_{11} = 1$ $q_{12 + q_{21} = -\frac{2}{3}}$ $q_{22} = 3$ $b_1 = -1$ $b_2 = 2$

Como se vera mas adelante resulta conveniente elegir $q_{12} = q_{21} = -\frac{1}{3}$.

De esta forma, se tiene que
$Q =  \begin{pmatrix} 1 & -\frac{1}{3} \\ -\frac{1}{3} & 3\end{pmatrix} $
y
$b = \begin{pmatrix} -1\\ 2 \end{pmatrix}$

\begin{equation}
    f(z) = (z^{T}Qz - 2b^{T}z) + 2e^{x+y}, z = (x,y) \in \mathbb{R}^{2\times1}
\end{equation}

%Ej1.3
\subsection{Expresion matricial para puntos criticos}
Comentario: Aca se muestra el desarrollo de como se llega a expresar la ec de puntos criticos en forma matricial.

Para resolver este ejercicio, se calcula el gradiente de f y se desarrolla la expresion de F(z), mostrando que se
llega a la misma expresion.

$\nabla f = \left( \frac{\partial f}{\partial x}, \frac{\partial f}{\partial y} \right)$

\begin{equation}
    \nabla f = \left( \frac{\partial f}{\partial x}, \frac{\partial f}{\partial y} \right)
    =
    \left( 2x - \frac{2}{3}y + 2 + 2e^{x+y}, 6y - \frac{2}{3}x - 4 + 2e^{x+y} \right) = (0,0)
\end{equation}

\begin{align}
    F(z) &= (Qz - b) + \left(\begin{matrix} 1\\1 \end{matrix}\right)e^{x+y}
    \\
    F(z) &= \begin{pmatrix} 1 & -\frac{1}{3} \\ -\frac{1}{3} & 3\end{pmatrix} \begin{pmatrix} x\\y \end{pmatrix}
            -\begin{pmatrix} -1\\2 \end{pmatrix} + \begin{pmatrix} e^{x+y}\\e^{x+y} \end{pmatrix}
    \\
    F(z) &= \begin{pmatrix} x -\frac{1}{3}y + 1 +e^{x+y} \\ -\frac{1}{3}x + 3y - 2 +e^{x+y} \end{pmatrix} = \begin{pmatrix} 0\\0 \end{pmatrix}
\end{align}

%Ej1.4
\subsection{Hallar a mano los puntos criticos}
Aca se muestra alguna imagen y una tabla de valores x,y f y F = grad(f).

Ej 2.1

El método de Newton Raphson es un método de aproximación lineal donde miramos la derivada (el jacobiano) en un punto, y buscamos el punto de corte de esta tangente con el 0

El polinomio de taylor de orden 1 en el punto $x^((k))$, con $F$ diferenciable en $x^{(k)}$ es:

F(x) = F(x^{(k)}) + J_F(x^{(k)})(x-x^{(k)})+O(\left \| x-x^{(k)} \right \|^2)

truncando el término O(\left \| x-x^{(k)} \right \|^2) y resolviendo F(x) \approx  0 tenemos

\begin{cases}
 & x^{(k+1)} = x^{(k)} - J_F(x^{(k)})^{-1} * F(x^{(k)}) \\
 & x^{(0)}  \in \mathbb{R}^n
\end{cases}

El determinante de $J_F$ debe ser no nulo para poder invertir la matriz.

El método de Newton rhapson consiste en iterar este proceso, aproximándonos a la solución con cada paso

\begin{algorithm}[H]
\small
\centering
\begin{algorithmic}[1]1
\Require $G=(T\cup S,E)$,$c(e),d(e) \forall e \in E$,
\State {$\mathcal{C} \leftarrow Christofides(G,c)$ }
\State {$L \leftarrow \emptyset$, $I \leftarrow T$, $E^{\prime} \leftarrow E(\mathcal{C})$, $J \leftarrow T$}
\State {$F \leftarrow (L\cup I,E^{\prime})$}
%\Comment {Introduce Steiner nodes to the Backbone if the cost is reduced:}
\While{$|J| \geq 3$}
    \If {there are  $s \in S$, $(t,v),(v,w)\in F$: $c(t,v)+c(v,w)>d(v,s)+c(t,s)+c(s,w)$}
            \State {$L \leftarrow L\cup \{v\}$, $I \leftarrow I \cup \{s\}\:  \backslash\: \{v\}$, $J \leftarrow J \backslash \{t,v\}$ }
            \State {$E^{\prime} \leftarrow E^{\prime} \cup \{(t,s),(s,v),(s,w)\}\:\backslash\: \{(t,v),(v,w)\} $ }
         \Else
           \State {$J \leftarrow J \:\backslash\: \{t\}$}
    \EndIf
\EndWhile \\
\Return $F=(I\cup L,E^{\prime})$
\end{algorithmic}
\end{algorithm}

%Ej2.2
\subsection{Expresion matricial para la matriz jacobiana de la funcion F}
Al igual que en la parte 1.3, se resuelve el ejercicio hallando la matriz jacobiana de F, se desarrolla
la expresion matricial y se muestra que con ambas se obtiene la misma expresion.

\begin{equation}
    F(x,y) = \left( 2x - \frac{2}{3}y + 2 + 2e^{x+y}, 6y - \frac{2}{3}x - 4 + 2e^{x+y} \right)
\end{equation}

\begin{equation}
    \mathbb{J}_F(x,y) =
    \begin{pmatrix}
        \frac{\partial F_1}{\partial x} & \frac{\partial F_1}{\partial y} \\
        \frac{\partial F_2}{\partial x} & \frac{\partial F_2}{\partial y}
    \end{pmatrix}
    =
    \begin{pmatrix}
        1 + e^{x+y} & -\frac{1}{3} + e^{x+y} \\
        -\frac{1}{3} + e^{x+y} & 3 + e^{x+y}
    \end{pmatrix}
\end{equation}

$\mathbb{J}_F(x,y) = Q + aa^T$, con $a(x,y) = \begin{pmatrix} 1\\1 \end{pmatrix}\sqrt{e^{x+y}} \in \mathbb{R}^{2 \times 1}$

\begin{equation}
    \mathbb{J}_F(x,y) = 
    \begin{pmatrix}
        1 & -\frac{1}{3} \\
        -\frac{1}{3} & 3
    \end{pmatrix}
    +
    \begin{pmatrix} 1 & 1 \\ 1 & 1 \end{pmatrix} \sqrt{e^{x+y}}
    =
    \begin{pmatrix}
        1 + e^{x+y} & -\frac{1}{3} + e^{x+y} \\
        -\frac{1}{3} + e^{x+y} & 3 + e^{x+y}
    \end{pmatrix}
\end{equation}

3 CHOLESKY

3.1  Descomposición de Cholesky
Q \in M ^{n\times n} (\mathbb{R}) una matriz simetrica definida positiva, es decir se cumple:
Q=Q^{t}  y {X\vect}^{t}Q{X\vect} > 0 \forall {X\vect} \neq \vec{0}
Entonces existe una matriz C\in M ^{n\times n} triangular inferior tal que Q puede ser factorizada como Q = CC^{t} 

3.2 se quiere resolver el sistema A{X\vect}=b con A \in M ^{n\times n} (\mathbb{R}) una matriz definida positiva
factorizamos A de forma de obtener A = CC^{t}  \Rightarrow  CC^{t}{X\vect}=b
se hace cambio de variable
\left \{  \right.C^{t}{X\vect}= {Y\vect} (1)
C{Y\vect} = b (2)

Se resuelve el sistema triangular (2), C triangular inferior por lo que se usa sustitución hacia adelante:
y_{1}=\frac{b_{1}}{c_{11}}
y_{i}=\frac{1}{c_{ii}}(b_{i}-\sum _{j=1}^{i-1} c_{ij}x_{j}), i=2,...,n

luego se resuelve el sistema (1) que es triangular superior con sustitución hacia atrás:
y_{n}=\frac{b_{n}}{c_{nn}}
y_{i}=\frac{1}{c_{ii}}(b_{i}-\sum _{j=i+1}^{n} c_{ij}x_{j}), i=n-1,...,1

3.3
el orden de resolver (2) es n (\frac{n+1}{2})  multiplicaciones, divisiones y el n\acute{u}mero de sumas  y restas es n (\frac{n-1}{2})
para resolver el sistema se usa 2n^{2} flops

para factorizar A como CC^{t} , se hace cambio de variable L=C^{t} y L^{t}=C de esta forma buscamos A= L^{t}L   utilizando descomposición QR se obtiene la factorización, el orden de la misma es de (\frac{1}{3})n^{3}
por lo tanto el orden total es (\frac{1}{3})n^{3} + 2n^{2} \approx (\frac{1}{3})n^{3} 

3.4
El método de Newton Raphson tiene k iteraciones, en cada una se resuelve el sistema lineal con el método de Cholesky. 
El método de Cholesky es de orden n^{3}  por lo tanto el orden de NR utilizando Cholesky sería:  kn^{3}

4.2

El algoritmo recorre la matriz L^{t}  siendo L matriz de factorización de Cholesky de Q.
y  la va modificando transformandola en la matriz \bar{L}^{t} siendo \bar{L} matriz de factorización de Cholesky de Q_{a}.
Se recorre en un loop inicial por filas de L^{t} , se calcula el elemento de la diagonal de la fila y luego se realiza un loop por las columnas, se calcula en cada elemento el valor dada una fórmula que contiene elementos de la corrida actual y la anterior(la fila anterior).
Se utilizan las variables s y c para almacenar datos de la corrida anterior que serán usados en el cácluo de la siguiente.

Q=\begin{pmatrix}
l_{11}                \sqrt{l_{11}}l_{21}   ...                                ... \\ 
\sqrt{l_{11}}l_{21}   l_{21}^{2}+l_{22}^{2} ...                                ... \\ 
 ...                   ...                  l_{31}^{2}+l_{32}^{2}+l_{33}       ... \\
... \\ 
 ...                   ...                   ...                               l_{n1}^{2}+l_{n2}^{2}+...+l_{nn-1}^{2}+l_{nn} 
\end{pmatrix}



aa^{t}=\begin{pmatrix}
a_{1}^{2}         a_{1}a_{2}     ...  a_{1}a_{n} \\ 
a_{2}a_{1}        a_{2}^{2}      ...       ... \\ 
 ...                   ...       ...       ... \\

 ...                   ...       ...       a_{n}^{2} 
\end{pmatrix}

Q_{a}=Q + aa^{t} = \bar{L}\bar{L}^{t}

se busca obtener \bar{L}^{t}=\begin{pmatrix}
\sqrt{ \bar{l}_{11}}          0     ...  0 \\ 
\bar{l}_{21}       \sqrt{ \bar{l}_{22}}       ...       0 \\ 
\bar{l}_{31}                   ...       ...       0 \\

\bar{l}_{n1}                   ...       ...       \sqrt{ \bar{l}_{nn}} 
\end{pmatrix}


\sqrt{ \bar{l}_{11}} =\sqrt{ (\sqrt{{l}_{11})}^{2} +a_{1}^{2}}
\bar{l}_{21} =  \frac{\sqrt{{l}_{11}}{l}_{21} +a_{2}a_{1}}{\sqrt{(\sqrt{{l}_{11}})^{^{2}}+a_{1}^{2}}}

tenemos elementos de la corrida de la fila 1 y elementos de la corrida de la fila 2 en la que se esta, factorizan esta cuenta de froma de independizar los elementos de la corrida anterior con c y s 
para este caso
c_{1}=\frac{\sqrt{ (\sqrt{{l}_{11})}^{2} +a_{1}^{2}}}{\sqrt{{l}_{11}}}
s_{1}=\frac{a_{1}}{{l}_{11}}
son utilizados en el cálculo de los elementos que no son de la diagonal
según la fórmula:  \bar{l}_{ij} =  \frac{{{l}_{ij}} +{s}_{i}a_{j}}{c_{i}}



%Ej4.3
\subsection{Implementacion de Cholesky en una matriz tridiagonal simetrica.}
\begin{equation*}
    Q = \begin{pmatrix} 
            \alpha_1 & \beta_1  & 0 & \cdots{} & 0\\ 
            \beta_1 & \ddots & \ddots & \ddots & \vdots \\
            0 & \ddots & \ddots & \ddots & 0 \\
            \vdots & \ddots & \ddots & \ddots & \beta_n \\
            0 & \cdots & 0 & \beta_n & \alpha_n
        \end{pmatrix}
\end{equation*}

\begin{equation*}
    L_{n} = \begin{pmatrix} 
            1 &   &  &  & \\ 
            l_1 & 1 &  &  &  \\
             & \ddots & \ddots &  &  \\
             &  & l_{n-2} & 1 &  \\
             &  &  & l_{n-1} & 1
        \end{pmatrix}
\end{equation*}

\begin{equation*}
    \Delta_n = \begin{pmatrix} 
            \delta_1 &   &  \\ 
             & \ddots &    \\
             &  & \delta_n
        \end{pmatrix}
\end{equation*}

con \begin{equation} l_i = \frac{\beta_i}{\delta_i} \end{equation}
y \begin{equation} l_i = \frac{\beta_i}{\delta_i} \end{equation}

\begin{equation}
        \delta_i =
            \begin{cases}
                \alpha_1 \text{ si } i = 1 \\
                \alpha_i - \frac{\beta_{i-1}^2}{\delta_{i-1}} \text{ si } i>1
            \end{cases}
    \end{equation}

[BORRADOR] Por tal motivo, se sabe que $ Q = L_n\Delta_nL_{n}^{t} $,
escribamos $\Delta_n$ como $\sqrt\Delta_n\sqrt\Delta_n$ y sustituyendo en la expresion anterior se tiene que
$ Q = L_n\sqrt\Delta_n\sqrt\Delta_nL_{n}^{t} $ y llamando $L$ a $L_n\sqrt\Delta_n$ y $L^t$ a $\sqrt\Delta_nL_{n}^{t}$
obtenemos que $Q = LL^t$ con $L$ triangular inferior hallando asi su descomposicion de Cholesky.

4.5
El orden de NR2 es dado por k iteraciones de NR y en cada una de las iteraciones se calcula: la actualización de rango uno de Q (  orden n^{2} ) , la descomposición de Cholesky ultilizando método de Thomas (orden n), y sustitución hacia atrás (  orden n^{2} ) por lo tanto el orden de NR2 es kn^{2}. 
